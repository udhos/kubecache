# Default values for kubecache.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: udhos/kubecache
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# redeploy:
#
# 'always': adds a random annotation to Deployment in
#           order to redeploy the pods whenever the chart is reapplied.
#
# 'reconfig': adds annotations with checksums of configurations in
#             order to redeploy the pods whenever configuration is changed.
#
# https://v3.helm.sh/docs/howto/charts_tips_and_tricks/#automatically-roll-deployments
#
redeploy: always

podAnnotations:
  "sidecar.istio.io/inject": "true"
  "sidecar.istio.io/interceptionMode": "TPROXY" # REDIRECT or TPROXY
  "prometheus.io/scrape": "true"
  "prometheus.io/path": /metrics
  "prometheus.io/port": "3000"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# add custom labels to deployment pods
customLabels:
  app: kubecache

resources:
  requests:
    cpu: 300m
    memory: 200Mi
    ephemeral-storage: 200Mi
  limits:
    cpu: 2000m
    memory: 400Mi
    ephemeral-storage: 200Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  apiVersion: autoscaling/v2

nodeSelector: {}

tolerations: []

affinity: {}

service:
  type: ClusterIP
  port: 9000
  targetPort: 8080

podHealthCheck:
  port: 8888
  path: /health

#
# See: https://stackoverflow.com/questions/72816925/helm-templating-in-configmap-for-values-yaml
#
configMapProperties:
  AUTOMEMLIMIT_DEBUG: "true"
  #SECRET_ROLE_ARN: ""
  #TRACE: "true"
  #DEBUG_LOG: "true"
  #LISTEN_ADDR: ":8080"
  #BACKEND_URL: "http://config-server:9000"
  #
  # only requests matching both RESTRICT_ROUTE_REGEXP and RESTRICT_METHOD are cached.
  # *empty* list means match *anything*.
  #
  #RESTRICT_ROUTE_REGEXP: '["^/develop", "^/homolog", "^/prod", "/develop/?$", "/homolog/?$", "/prod/?$"]'
  #RESTRICT_METHOD: '["GET", "HEAD"]'
  #
  #BACKEND_TIMEOUT: 300s
  #CACHE_TTL: 300s
  #CACHE_ERROR_TTL: 60s
  #HEALTH_ADDR: ":8888"
  #HEALTH_PATH: /health
  #METRICS_ADDR: ":3000"
  #METRICS_PATH: /metrics
  #METRICS_NAMESPACE: ""
  #METRICS_BUCKETS_LATENCY_HTTP: "0.00001, 0.000025, 0.00005, 0.001, 0.0025, 0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1.0, 2.5, 5, 10, 25, 50, 100, 250, 500, 1000"
  #GROUPCACHE_VERSION: "3"
  #GROUPCACHE_PORT: :5000
  #GROUPCACHE_SIZE_BYTES: "100000000"
  #GROUPCACHE_DISABLE_PURGE_EXPIRED: "false"
  #KUBEGROUP_METRICS_NAMESPACE: ""
  #KUBEGROUP_DEBUG: "true"
  #KUBEGROUP_LABEL_SELECTOR: "app=kubecache"
  OTEL_TRACES_SAMPLER: parentbased_traceidratio
  OTEL_TRACES_SAMPLER_ARG: "0.01"
  # pick one of OTEL_SERVICE_NAME or OTEL_RESOURCE_ATTRIBUTES
  #OTEL_SERVICE_NAME: mynamespace.kubecache
  #OTEL_RESOURCE_ATTRIBUTES: 'service.name=mynamespace.kubecache,key2=value2'
  #
  # General configuration: https://opentelemetry.io/docs/concepts/sdk-configuration/general-sdk-configuration/
  # Exporter configuration: https://opentelemetry.io/docs/concepts/sdk-configuration/otlp-exporter-configuration/
  #
  # Jaeger:
  OTELCONFIG_EXPORTER: jaeger
  OTEL_TRACES_EXPORTER: jaeger
  OTEL_PROPAGATORS: b3multi
  OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger-collector:14268
  #
  # OTLP gRPC:
  #OTELCONFIG_EXPORTER: grpc
  #OTEL_TRACES_EXPORTER: otlp
  #OTEL_PROPAGATORS: b3multi
  #OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger-collector:4317
  #
  # OTLP HTTP:
  #OTELCONFIG_EXPORTER: http
  #OTEL_TRACES_EXPORTER: otlp
  #OTEL_PROPAGATORS: b3multi
  #OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger-collector:4318
